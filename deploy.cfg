[kb_orthofinder]
kbase-endpoint = {{ kbase_endpoint }}
job-service-url = {{ job_service_url }}
workspace-url = {{ workspace_url }}
shock-url = {{ shock_url }}
handle-service-url = {{ handle_url }}
srv-wiz-url = {{ srv_wiz_url }}
njsw-url = {{ njsw_url }}
auth-service-url = {{ auth_service_url }}
auth-service-url-allow-insecure = {{ auth_service_url_allow_insecure }}
scratch = /kb/module/work/tmp

# FOR TESTING PURPOSES ONLY
# These configuration key-value pairs are only used
# if the "families_path" parameter is used for
# pre-determined OrthoFinder results.
# If testing is set to 0 for tests, the App will
# use the reference data instead
testing = 0

# test_data can either be OrthoFinder_Test_Reference or OrthoFinder_Test_Result_Reference
# the former containing species-species BLAST results
# and the latter containing pre-computed protein families
# both are archived from a prior OrthoFinder run.
# In order to prepare the data from a prior OrthoFinder run, so that you can skip running
# OrthoFinder (see below), I run these commands:
# $ cd test_local/workdir/test_data/
# $ tar -czf OrthoFinder_Test_Result_Reference.tar.gz OrthoFinder_Test_Result_Reference
# $ scp data/OrthoFinder_Test_Result_Reference.tar.gz gce:~/public_html/KBase_App_Files/
test_data = OrthoFinder_Test_Result_Reference

# If pre-computed protein families (i.e. OrthoFinder_Test_Result_Reference)
# are being used, set run_orthofinder to zero to skip that step and speed up
# testing. With 200 protein sequences and a minimum of two genomes, testing takes
# about 80 minutes when running OrthoFinder and 20 minutes when not.
run_orthofinder = 0
